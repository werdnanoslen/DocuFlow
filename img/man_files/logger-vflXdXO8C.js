// Generated by CoffeeScript 1.3.3
var RegistrationLogger, ShmodelLogger, ShmodelUILogger;

ShmodelLogger = {
  log: function(evt) {
    return new Ajax.DBRequest('/shmlog', {
      method: 'post',
      noAutonotify: true,
      parameters: {
        evt: evt,
        url: window.location.href
      }
    });
  },
  attachLogListener: function(evt, elm) {
    if (!(elm != null)) {
      return;
    }
    return elm.observe('click', function(e) {
      ShmodelLogger.log(evt);
      if (elm.href && elm.href !== '#' && elm.target !== '_blank') {
        Event.stop(e);
        return (function() {
          return window.location.href = elm.href;
        }).defer();
      }
    });
  }
};

ShmodelUILogger = {
  log: function(evt) {
    return new Ajax.DBRequest('/shmuilog', {
      method: 'post',
      noAutonotify: true,
      parameters: {
        evt: evt
      }
    });
  },
  attachLogListener: function(evt, elm) {
    if (!(elm != null)) {
      return;
    }
    return elm.observe('click', function(e) {
      ShmodelLogger.log(evt);
      if (elm.href && elm.href !== '#' && elm.target !== '_blank') {
        Event.stop(e);
        return (function() {
          return window.location.href = elm.href;
        }).defer();
      }
    });
  }
};

RegistrationLogger = {
  log: function(evt) {
    var url;
    url = window.location.href;
    return new Ajax.DBRequest('/share/reglog', {
      method: 'post',
      noAutonotify: true,
      parameters: {
        evt: evt,
        url: url
      }
    });
  },
  attachLogListener: function(evt, elm) {
    if (!(elm != null)) {
      return;
    }
    return elm.observe('click', function(e) {
      RegistrationLogger.log(evt);
      if (elm.href && elm.href !== '#' && elm.target !== '_blank') {
        Event.stop(e);
        return (function() {
          return window.location.href = elm.href;
        }).defer();
      }
    });
  }
};
